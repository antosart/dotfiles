# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# set $control ~/.i3/workspace_controller.py

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8
font pango:Inconsolata 10


# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty


# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id j4-dmenu-desktop

#bindsym $mod+x exec rofi -show run -font "snap 10" -fg "#bbbbbb" -bg "#000000" -hlfg "#ffb964" -hlbg "#000000" -o 85 -location 2
#bindsym $mod+z exec rofi -show window -font "snap 10" -fg "#bbbbbb" -bg "#000000" -hlfg "#ffb964" -hlbg "#000000" -o 85 -location 2
bindsym $mod+x exec rofi -show run -font "Hack 10" -o 85 -location 2
bindsym $mod+z exec rofi -show window -font "Hack 10"  -o 85 -location 2
bindsym $mod+Shift+Return exec rofi -show "fm:$HOME/bin/fmenu-rofi" -font "Hack 10"  -o 85 -location 2

# Make the currently focused window a scratchpad
bindsym $mod+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+plus scratchpad show

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+ograve focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ograve move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# toggle sticky
bindsym $mod+Shift+z sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# # switch to workspace
# bindsym $mod+1 exec $control go 1
# bindsym $mod+2 exec $control go 2
# bindsym $mod+3 exec $control go 3
# bindsym $mod+4 exec $control go 4
# bindsym $mod+5 exec $control go 5
# bindsym $mod+6 exec $control go 6
# bindsym $mod+7 exec $control go 7
# bindsym $mod+8 exec $control go 8
# bindsym $mod+9 exec $control go 9
# bindsym $mod+0 exec $control go 0

# # move focused container to workspace
# bindsym $mod+Shift+1 exec $control move 1
# bindsym $mod+Shift+2 exec $control move 2
# bindsym $mod+Shift+3 exec $control move 3
# bindsym $mod+Shift+4 exec $control move 4
# bindsym $mod+Shift+5 exec $control move 5
# bindsym $mod+Shift+6 exec $control move 6
# bindsym $mod+Shift+7 exec $control move 7
# bindsym $mod+Shift+8 exec $control move 8
# bindsym $mod+Shift+9 exec $control move 9
# bindsym $mod+Shift+0 exec $control move 0

# # move to last workspace
# bindsym $mod+b workspace back_and_forth

set $WS1 1:W
set $WS2 2
set $WS3 3
set $WS4 4
set $WS5 5
set $WS6 6
set $WS7 7
set $WS8 8
set $WS9 9
set $WS0 0:✉


workspace_auto_back_and_forth yes

# switch to workspace
bindsym $mod+1 workspace $WS1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace $WS5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace $WS0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1; workspace $WS1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace $WS5; workspace $WS5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace $WS0; workspace $WS0


# Additional workspace
set $WSF1 F1
set $WSF2 F2
set $WSF3 F3
set $WSF4 F4
set $WSF5 F5
set $WSF6 F6
set $WSF7 F7
set $WSF8 F8
set $WSF9 F9
set $WSF10 F10
set $WSF11 F11
set $WSF12 F12

workspace $WS1 output eDP1
workspace $WS2 output eDP1
workspace $WS3 output eDP1
workspace $WS4 output eDP1
workspace $WS5 output eDP1
workspace $WS6 output eDP1
workspace $WS7 output eDP1
workspace $WS8 output eDP1
workspace $WS9 output eDP1
workspace $WS0 output eDP1

workspace $WSF1 output HDMI1
workspace $WSF2 output DP2
workspace $WSF3 output DP2
workspace $WSF4 output DP2
workspace $WSF5 output DP2
workspace $WSF6 output DP2
workspace $WSF7 output DP2
workspace $WSF8 output DP2
workspace $WSF9 output DP2
workspace $WSF10 output DP2
workspace $WSF11 output DP2
workspace $WSF12 output DP2

# switch to workspace
bindsym $mod+F1 workspace $WSF1
bindsym $mod+F2 workspace $WSF2
bindsym $mod+F3 workspace $WSF3
bindsym $mod+F4 workspace $WSF4
bindsym $mod+F5 workspace $WSF5
bindsym $mod+F6 workspace $WSF6
bindsym $mod+F7 workspace $WSF7
bindsym $mod+F8 workspace $WSF8
bindsym $mod+F9 workspace $WSF9
bindsym $mod+F10 workspace $WSF10
bindsym $mod+F11 workspace $WSF11
bindsym $mod+F12 workspace $WSF12

# move focused container to workspac
bindsym $mod+Shift+F1 move container to workspace $WSF1; workspace $WSF1
bindsym $mod+Shift+F2 move container to workspace $WSF2; workspace $WSF2
bindsym $mod+Shift+F3 move container to workspace $WSF3; workspace $WSF3
bindsym $mod+Shift+F4 move container to workspace $WSF4; workspace $WSF4
bindsym $mod+Shift+F5 move container to workspace $WSF5; workspace $WSF5
bindsym $mod+Shift+F6 move container to workspace $WSF6; workspace $WSF6
bindsym $mod+Shift+F7 move container to workspace $WSF7; workspace $WSF7
bindsym $mod+Shift+F8 move container to workspace $WSF8; workspace $WSF8
bindsym $mod+Shift+F9 move container to workspace $WSF9; workspace $WSF9
bindsym $mod+Shift+F10 move container to workspace $WSF10; workspace $WSF10
bindsym $mod+Shift+F11 move container to workspace $WSF11; workspace $WSF11
bindsym $mod+Shift+F12 move container to workspace $WSF12; workspace $WSF12


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec ~/.i3/exit_menu.sh

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ograve resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


##
# move floating windows with keys
bindsym $mod+m mode "move" focus floating
mode "move" {
    bindsym $mod+Tab focus right

    bindsym Left  move left
    bindsym Down  move down
    bindsym Up    move up
    bindsym Right move right

    bindsym h     move left
    bindsym j     move down
    bindsym k     move up
    bindsym l     move right

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
#        status_command i3status
#	 status_command py3status -c ~/.i3/i3status.conf
         status_command python3 ~/.i3/ipy3status.py
}

# touchpad
# exec --no-startup-id synclient TapButton1=1 TapButton2=3 TapButton3=2 HorizTwoFingerScroll=1
exec --no-startup-id xinput set-prop "SynPS/2 Synaptics TouchPad" "Synaptics Two-Finger Scrolling" 1 1
exec --no-startup-id xinput set-prop "SynPS/2 Synaptics TouchPad" "Synaptics Tap Action" 0 0 0 0 1 3 2


# Make Icedove Compose Message floating:
for_window [instance="Msgcompose"] floating enable
for_window [instance="file-roller"] floating enable
for_window [class="spotify"] floating enable
for_window [title="^Preferenze$"] floating enable
for_window [title="^Preferences$"] floating enable
for_window [instance="Calendar" class="Thunderbird" title="New Event"] floating enable
for_window [instance="^xsane"] floating enable
for_window [class="^nm-connection-editor$"] floating enable
for_window [class="Wfica_Seamless"] floating enable

for_window [class="^google-chrome$"] border pixel 2
for_window [class="^Terminator$"] border pixel 2
for_window [instance="^Mail$" class="^Thunderbird$"] border pixel 2
for_window [instance="^Navigator$"] border pixel 2

assign [instance="Navigator"] $WS1
assign [instance="Mail"] $WS0


#bindsym $mod+Shift+t exec i3-msg "append_layout $HOME/.i3/workspace-latex.json"


# Screen Locker
#exec --no-startup-id xautolock -detectsleep -time 15 -locker 'i3lock -d -n -e'
#exec --no-startup-id xautolock -detectsleep -time 15 -locker 'gnome-screensaver-command -l'
# Lock screen when opening lid
exec --no-startup-id xss-lock -- i3lock -n -e
#exec --no-startup-id xss-lock -- gnome-screensaver-command -l

# SYSTEM MENU
set $sysmenu "system:  [r]eload  [l]ock [L]ogout  [p]oweroff  re[b]oot [s]uspend [h]ibernate"
bindsym $mod+Delete      mode $sysmenu

mode $sysmenu {
    bindsym r         restart	
    bindsym L         exit	
    bindsym p         exec systemctl poweroff
    bindsym b         exec systemctl reboot
    bindsym l	      exec xset dpms force off
    bindsym h	      exec systemctl hibernate
    bindsym s	      exec systemctl suspend
    bindsym Return    mode "default"
    bindsym Escape    mode "default"
}


exec --no-startup-id /usr/bin/gnome-settings-daemon
exec --no-startup-id /usr/lib/x86_64-linux-gnu/polkit-gnome-authentication-agent-1


# Sreen brightness controls
bindsym XF86MonBrightnessUp exec $HOME/bin/brightness-set up # increase screen brightness
bindsym XF86MonBrightnessDown exec $HOME/bin/brightness-set down # decrease screen brightness

bindsym XF86WLAN exec ./block-unblock-wifi

bindsym XF86AudioRaiseVolume exec $HOME/bin/volume-set up
bindsym XF86AudioLowerVolume exec $HOME/bin/volume-set down
bindsym XF86AudioMute exec $HOME/bin/volume-set mute

#Screensaver onoff
bindsym $mod+Shift+s exec $HOME/bin/commute-screensaver

# Notifications on/off
bindsym $mod+Shift+n exec $HOME/bin/disable-enable-notifications

focus_follows_mouse no

exec --no-startup-id numlockx on
exec --no-startup-id compton --backend glx --vsync opengl --opacity-rule '100:window_type = "dock" && class_g = "i3bar"' --config ~/.config/compton.conf -b
exec --no-startup-id dropbox start 
exec --no-startup-id nextcloud 
exec --no-startup-id pcmanfm -d
exec --no-startup-id nm-applet
exec --no-startup-id pasystray
exec --no-startup-id tracker daemon -s
exec --no-startup-id kupfer --no-splash

exec --no-startup-id Telegram
for_window [class="Telegram"] move scratchpad
bindsym $mod+t [class="Telegram"] scratchpad show
#exec --no-startup-id gnome-terminal --title="scratchpad-terminal" && xprop -name "scratchpad-terminal"  -f WM_CLASS 8ss -set WM_CLASS "scratchpad-terminal"
#for_window [instance="scratchpad-terminal"] move scratchpad
exec --no-startup-id terminator -T "scratchpad-terminal"
#&& sleep 10 && xprop -name "scratchpad-terminal"  -f WM_CLASS 8ss -set WM_CLASS "scratchpad-terminal"
for_window [title="scratchpad-terminal"] floating enable, move scratchpad, scratchpad show;
for_window [title="scratchpad-terminal"] resize grow left 100, resize grow right 100, resize grow down 100, resize grow up 100, move scratchpad;
bindsym $mod+backslash [title="scratchpad-terminal"] scratchpad show;
#exec --no-startup-id $HOME/bin/twmnd

bindsym $mod+p exec $HOME/bin/passmenu --type


#Multi monitor
bindsym $mod+igrave move workspace to output right
bindsym $mod+XF86Explorer exec xrandr --output DP2 --off
bindsym $mod+XF86LaunchA exec xrandr --output DP2 --auto --left-of eDP1
bindsym $mod+Control+Right focus output right
bindsym $mod+Control+Left focus output left
bindsym $mod+Control+Shift+Right move output right; focus output right
bindsym $mod+Control+Shift+Left move output left; focus output left

# scrot
bindsym Print exec scrot -s -e 'mv $f /tmp/ && xdg-open /tmp/$f'

#exec --no-startup-id $HOME/bin/recoll_index_on_ac.sh
